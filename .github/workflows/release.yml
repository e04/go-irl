name: Build & Publish Release Assets

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version
        id: vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Assemble release assets
        run: |
          set -euo pipefail

          TOOLS=(go-srtla srt-live-reporter obs-srt-bridge)
          ARCHS=(windows-x64 linux-arm64 linux-x64 macos-arm64)

          # Ensure required utilities are present
          sudo apt-get update -qq
          sudo apt-get install -y -qq unzip zip

          for ARCH in "${ARCHS[@]}"; do
            DIST_DIR="go-irl-${ARCH}"
            mkdir -p "${DIST_DIR}"

            # Copy appropriate launcher scripts
            if [[ "${ARCH}" == windows-* ]]; then
              cp go-irl-windows.bat "${DIST_DIR}/"
              cp _go-irl.ps1 "${DIST_DIR}/"
            else
              cp go-irl.sh "${DIST_DIR}/"
              chmod +x "${DIST_DIR}/go-irl.sh"
            fi

            # Download latest binary for each tool
            for TOOL in "${TOOLS[@]}"; do
              BIN_ZIP_URL="https://github.com/e04/${TOOL}/releases/latest/download/${TOOL}-${ARCH}.zip"
              echo "Downloading ${BIN_ZIP_URL} ..."
              curl -sSL "${BIN_ZIP_URL}" -o "/tmp/${TOOL}-${ARCH}.zip"
              unzip -q -j "/tmp/${TOOL}-${ARCH}.zip" -d "${DIST_DIR}/"
              chmod +x "${DIST_DIR}/${TOOL}"* || true
            done

            # Package the distribution directory
            zip -qr "${DIST_DIR}.zip" "${DIST_DIR}"
          done

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.vars.outputs.VERSION }}
          name: ${{ steps.vars.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            go-irl-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
